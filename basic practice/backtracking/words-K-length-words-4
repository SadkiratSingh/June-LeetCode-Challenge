#include <iostream>
#include <bits/stdc++.h>
using namespace std;

//cc is character count
//cs is current slot
// just build a recursion tree keeping slots at levels.

void findways(string& p,int k,string& op,int cs,int cc,unordered_map<char,int>freq){
    if(cc==k){
        cout<<op<<endl;
        return;
    }
    for(int i=0;i<p.length();i++){
        if(freq[p[i]]>0){
            op[cs]=p[i];
            freq[p[i]]--;
            findways(p,k,op,cs+1,cc+1,freq);
            op[cs]='#';
            freq[p[i]]++;
        }
    }
}

void printways(string& s,int k){
    unordered_map<char,int>freq;
    unordered_set<char>unique;
    for(int i=0;i<s.length();i++){
        freq[s[i]]+=1;
    }
    string p;
    for(int i=0;i<s.length();i++){
        if(unique.find(s[i])==unique.end()){
            unique.insert(s[i]);
            p+=s[i];
        }
    }
    string op = string(k,'#');
    findways(p,k,op,0,0,freq);
}

int main() {
	// your code goes here
	string input;
	int k;
	cin>>input;
	cin>>k;
	printways(input,k);
	return 0;
}

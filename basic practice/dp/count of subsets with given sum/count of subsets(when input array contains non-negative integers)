#include <bits/stdc++.h> 
using namespace std; 
  
int findSubset(vector<int>& array,int n,int S){
    if(S>0 && n==0){
        return 0;
    }
    if(n==0){
        return 1;
    }
    if(array[n-1]<=S){
        return findSubset(array,n-1,S-array[n-1])+findSubset(array,n-1,S); 
    }
    else{
        return findSubset(array,n-1,S);
    }
}

int main() {
	// your code goes here
	int n;
	cin>>n;
	vector<int>array(n);
	for(int i=0;i<n;i++){
	    int temp;
	    cin>>temp;
	    array[i]=temp;
	}
	int S;
	cin>>S;
	int count=0;
	cout<<findSubset(array,n,S);
	return 0;
}

//Tabulation Approach
int findSubsetNo(vector<int>& array,int n,int S){
    int t[n+1][S+1];
    for(int i=0;i<n+1;i++){
        for(int j=0;j<S+1;j++){
            if(i==0 && j==0){
                t[i][j]=1;
            }
            else if(j>0 && i==0){
                t[i][j]=0;
            }
            else{
                if(array[i-1]<=j){
                    t[i][j]=t[i-1][j-array[i-1]]+t[i-1][j];
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
    }
    return t[n][S];
}

class Solution{

	public:
	void filterValues(vector<int>& filter,int range,int n,int* arr){
	    bool t[n+1][range+1];
	    for(int i=0;i<n+1;i++){
	        for(int j=0;j<range+1;j++){
	            if(j==0){
	                t[i][j]=true;
	            }
	            else if(i==0){
	                t[i][j]=false;
	            }
	            else{
	                if(arr[i-1]<=j){
	                    t[i][j]=t[i-1][j-arr[i-1]] || t[i-1][j];
	                }
	                else{
	                    t[i][j]=t[i-1][j];
	                }
	            }
	        }
	    }
	    int x=range/2;
	    for(int i=0;i<=x;i++){
	        if(t[n][i]==true){
	            filter.push_back(i);
	        }
	    }
	}
	int minDiffernce(int arr[], int n) 
	{ 
	    // Your code goes here
	    int range=0;
	    for(int i=0;i<n;i++){
	        range+=arr[i];
	    }
	    vector<int>filter;
	    filterValues(filter,range,n,arr);
	    return range-2*(filter[filter.size()-1]);
	} 
};

//approach is must. Very Good Question

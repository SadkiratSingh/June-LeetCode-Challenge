##### O(n*n) implementation #####
##### can be optimized using hashmap,store indices of inorder in hash map #####

Node* buildTreeUtil(int in[],int pre[],int& pind,int beg,int end){
    if(beg>end)
        return NULL;
    int value=pre[pind];
    pind+=1;
    Node* root=new Node(value);
    int i=beg;
    while(i<=end){
        if(in[i]==value)
            break;
        i++;
    }
    root->left=buildTreeUtil(in,pre,pind,beg,i-1);
    root->right=buildTreeUtil(in,pre,pind,i+1,end);
    return root;
}
Node* buildTree(int in[],int pre[], int n)
{
//add code here.
  int pind=0;
  return buildTreeUtil(in,pre,pind,0,n-1);
}

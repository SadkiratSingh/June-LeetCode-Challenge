class Solution {
public:
    int kthGrammar(int N, int K) {
        if(N==1 && K==1) //base
            return 0;
        
        //reduced input
        int n=N-1;
        int k;
        if(K%2==0)
            k=K/2;
        else
            k=(K/2)+1;
        
        //hypothesis
        int r=kthGrammar(n,k);
        
        //induction
        if(K%2==0){
            if(r==0)
                return 1;
            else
                return 0;
        }
        else
            return r; 
    }
};


Another Solution (my original idea..)

class Solution {
public:
    int findB(int N){
        if(N==1)
            return 1; //base
        int x=findB(N-1);//hypothesis
        return 2*x;//induction
    }
    int kthGrammar(int N, int K) {
        if(N==1 && K==1)//base
            return 0;
        int B=findB(N-1);
        int r;
        if(K>B){
            r=kthGrammar(N-1,K-B); //hypothesis
            if(r==1)//induction
                return 0;
            else
                return 1;
        }
        else{
            r=kthGrammar(N-1,K); //hypothesis
            return r;//induction
        }
    }
};

class Solution {
public:
    bool notalreadymonotone(vector<int>vec){
        int i=1;
        int n=vec.size();
        while(i<n){
            if(vec[i]<vec[i-1]){
                return true;
            }
            i+=1;
        }
        return false;
    }
    int monotoneIncreasingDigits(int N) {
        string num=to_string(N);
        int n=num.size();
        vector<int>numcon(num.size());
        for(int i=0;i<n;i++)
            numcon[i]=num[i]-'0';
        if(n==1)
            return N;
        if(notalreadymonotone(numcon)){
            for(int i=n-1;i>=1;i--){
                if(numcon[i]<numcon[i-1]){
                    numcon[i-1]--;
                    numcon[i]=9;
                    int l=i+1;
                    while(l<n){
                        numcon[l]=9;
                        l+=1;
                    }
                }
            }
            string s;
            for(int k=0;k<n;k++){
                s=s+to_string(numcon[k]);
            }
            return stoi(s);
            
        }
        return N;
    }
};

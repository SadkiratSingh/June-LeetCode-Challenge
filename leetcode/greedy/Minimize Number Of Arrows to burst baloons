class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        sort(points.begin(),points.end(),[](vector<int>a,vector<int>b){
            if(a[0]<b[0])
                return true;
            if(a[0]==b[0] && a[1]<b[1])
                return true;
            return false;
        });
        stack<vector<int>>stk;
        for(int i=0;i<points.size();i++){
            if(stk.empty()){
                stk.push(points[i]);
            }
            else if(points[i][0]>=stk.top()[0] && points[i][0]<=stk.top()[1]){
                vector<int>temp(stk.top().begin(),stk.top().end());
                vector<int>comp(points[i].begin(),points[i].end());
                stk.pop();
                int a=max(temp[0],comp[0]);
                int b=min(temp[1],comp[1]);
                vector<int>net(2);
                net[0]=a;
                net[1]=b;
                stk.push(net);
            }
            else
                stk.push(points[i]);
        }
        int count=0;
        while(!stk.empty()){
            stk.pop();
            count++;
        }
        return count;
    }
};

class Solution {
public:
    int eudist(vector<int>& point){
        int d=0;
        for(int i=0;i<point.size();i++)
            d+=(int)(pow((point[i]),2)+0.5);
        return d;
    }
    vector<vector<int>> kClosest(vector<vector<int>>& points, int K) {
        priority_queue<pair<int,int>>Q;
        vector<vector<int>>closest;
        for(int i=0;i<points.size();i++){
            if(Q.size()<=K)
                Q.push(make_pair(eudist(points[i]),i));
            if(Q.size()>K)
                Q.pop();
        }
        while(!Q.empty()){
            closest.push_back(points[(Q.top()).second]);
            Q.pop();
        }
        return closest;
    }
};

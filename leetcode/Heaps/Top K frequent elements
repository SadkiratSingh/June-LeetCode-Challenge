class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>um;
        vector<int>res;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>Q;
        for(int i=0;i<nums.size();i++)
            um[nums[i]]+=1;
        for(auto x:um){
            if(Q.size()<=k)
                Q.push(make_pair(x.second,x.first));
            if(Q.size()>k)
                Q.pop();
        }
        while(!Q.empty()){
            res.push_back((Q.top()).second);
            Q.pop();
        }
        return res;
    }
};

class Solution {
public:
    vector<int> mostCompetitive(vector<int>& nums, int k) {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>Q;
        vector<int>res;
        int index=nums.size()-k;
        for(int i=0;i<index;i++){
            Q.push({nums[i],i});
        }
        while(index<nums.size()){
            Q.push({nums[index],index});
            int ele=(Q.top()).first;
            int ele_i=(Q.top()).second;
            res.push_back(ele);
            Q.pop();
            while(!Q.empty() && ele_i>(Q.top()).second)
                Q.pop();
            index++;
        }
        return res;
    }
};

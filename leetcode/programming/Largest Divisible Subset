//////DISTINCT integers/////
class Solution {
public:
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        if(nums.size()==1)
            return nums;
        sort(nums.begin(),nums.end());
        int arr[nums.size()];
        for(int i=0;i<nums.size();i++)
            arr[i]=1;
        int j=1;
        int max_sub_len=INT_MIN;
        while(j<nums.size()){
            int i=0;
            while(i<j){
                if(nums[j]%nums[i]==0 && arr[j]<=arr[i])
                    arr[j]=arr[i]+1;
                i++;
            }
            max_sub_len=max(max_sub_len,arr[j]);
            j++;
        }
        int next=max_sub_len;
        vector<int>res;
        for(int i=nums.size()-1;i>=0;i--){
            if(next==arr[i]){
                res.push_back(nums[i]);
                next--;
            }
        }
        reverse(res.begin(),res.end());
        return res;
    }
};

class Solution {
public:
    int checkPartition(vector<int>& nums,int N,int S){
        int dp[N+1][S+1];
        for(int i=0;i<N+1;i++){
            for(int j=0;j<S+1;j++){
                if(j==0)
                    dp[i][j]=1;
                
                else if(i==0 && j>0)
                    dp[i][j]=0;
                
                else{
                    if(nums[i-1]<=j)
                        dp[i][j]=(dp[i-1][j-nums[i-1]] || dp[i-1][j]);
                    else
                        dp[i][j]=dp[i-1][j];
                }
            }
        }
        return dp[N][S];
    }
    bool canPartition(vector<int>& nums) {
        int n=nums.size();
        int S=0;
        for(int i=0;i<n;i++)
            S+=nums[i];
        if(S%2!=0){
            return 0;
        }
        else 
            return checkPartition(nums,n,S/2);
    }
};

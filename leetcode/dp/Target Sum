class Solution {
public:
    int countSubsets(vector<int>& nums,int ss){
        int n=nums.size();
        int t[n+1][ss+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<ss+1;j++){
                if(j==0 && i==0)
                    t[i][j]=1;
                else if(j>0 && i==0)
                    t[i][j]=0;
                else{
                    if(nums[i-1]<=j)
                        t[i][j]=t[i-1][j-nums[i-1]]+t[i-1][j];
                    else
                        t[i][j]=t[i-1][j];
                }
            }
        }
        return t[n][ss];
    }
    int findTargetSumWays(vector<int>& nums, int S) {
        long long int s=0;
        for(auto x:nums)
            s+=x;
        long long int temp=S+s;
        if(S<=s && temp%2==0){
            int ss=temp/2;
            return countSubsets(nums,ss);
        }
        else
            return 0;
    }
};

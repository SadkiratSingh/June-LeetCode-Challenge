class Solution {
public:
    vector<pair<double,int>>V; // vector to store sum of each level and number of nodes at each level
    int height(TreeNode* root){
        if(!root)
            return 0;
        else
            return 1+max(height(root->left),height(root->right));
    }
    void averageUtil(TreeNode* root,int level){
        if(!root)
            return;
        else{
            V[level].first+=(root->val);
            V[level].second+=1;
            averageUtil(root->left,level+1);
            averageUtil(root->right,level+1);
        }
    }
    vector<double> averageOfLevels(TreeNode* root) {
        int h=height(root);
        V.resize(h);
        int level=0;
        averageUtil(root,level);
        vector<double>res(h);
        int i=0;
        for(auto x:V){
            res[i]=(x.first/x.second);
            i++;
        }
        return res;
    }
};

// A very naive implementation but accepted by leetcode
typedef map<int,vector<int>> mpvec;
class Solution {
public:
    int height(TreeNode* root){
        if(root==NULL)
            return 0;
        return 1+max(height(root->left),height(root->right));
    }
    void rightSideViewUtil(TreeNode* root,int h,int level,mpvec& om){
        if(level==h || root==NULL)
            return;
        om[level].push_back(root->val);
        rightSideViewUtil(root->left,h,level+1,om);
        rightSideViewUtil(root->right,h,level+1,om);
    }
    vector<int> rightSideView(TreeNode* root) {
        int h=height(root);
        mpvec om;
        vector<int>res;
        rightSideViewUtil(root,h,0,om);
        for(auto x:om)
            res.push_back(*((om[x.first]).end()-1));
        return res;
    }
};
